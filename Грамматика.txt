НЕТЕРМИНАЛЫ
lang -> expr+
expr -> assign_expr | if_expr |while_expr
assign_expr -> VAR ASSIGN_OP value_expr
value_expr -> value (OP value)*
value -> VAR|DIGIT
if_expr -> IF if_head if_body
if_head -> LB logic_comp RB
logic_comp -> value COMP_OP value
//поскольку голова и тело циклов и условий по струткруе не отличаются, объеденены в один метод в парсере
if_body -> BEGIN expr END
while_expr ->while_expr_prec | do_while_expr
while_expr_prec -> WHILE while_head while_body
while_head ->LB logic_comp RB
while_body -> BEGIN expr END
do_while_expr -> DO do_while_body do_while_tail
do_while_body -> BEGIN expr END
do_while_tail -> WHILE LB logic_comp RB

ТЕРМИНАЛЫ
VAR->^([a-zA-Z])+$       		              
DIGIT ->(0|([1-9][0-9]*))		
ASSIGN_OP-> ^=$			
OP -> +|-|*|/			
COMP_OP >|<|>=|<=		
IF->if				
LB->(				
RB->)				
BEGIN -> {		
END -> }
ELSE -> else
WHILE->while			
DO-> do				
